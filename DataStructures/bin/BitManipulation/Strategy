Bit Manipulation

1) Count number of 1 in an integer
	
	count =0;
	while(n > 0)
		count++;
		n = n & n -1;
	return count;
	
	
2) isOdd

	//check the last bit is set or not
	return (n & 1 == 1); return (n & -n == 1); return (n % 2 == 1)
	
3) isEven 

	//check the last bit is zero or not
	return (n & 1 == 0); return (n & -n == 0); return (n % 2 == 0)
	
4) equals

	// xor should be zero
	return (n1 ^ n2 == 0);
	
5) Multiply by 2

	// left shift by 1
	return n << 1;
	
6) Divide by 2

	//right shift by 1
	return n >> 1;
	
7) Check whether kth bit is set or not

	return (n & 1 << k == 1);
	
 8) Set kth bit
 	
 	// shit 1 by k bits and AND with number
 	return n | 1 << k;
 	
 9) Clear kth bit
 
 	shift 1 by k bits , negate it and OR with number.
 	return n & (~ (1 << k) );
 	
10) Toggle kth Bit 

	// shift 1 by k bits and XOR with number.
	return n ^ (1 << k)
	
11) Toggle Rightmost bit

	return n ^ 1; return (n & n-1);
	
12) Find right most bit that is set
	
	count = 0;
	while( n & 1 != 1)
		count++;
		n >> 1;
	return count;
	
	
13) Find right most bit that is cleared

	count = 0;
	while( n & 1 != 0)
		count++;
		n >> 1;
	return count;
	
	
14) Swap odd and even bits

	odd = n & 0xAA
	even = n & 0x55
	
	return odd >> 1 | even << 1;
	
15) 